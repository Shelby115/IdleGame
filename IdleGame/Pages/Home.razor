@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IConfiguration Config

<PageTitle>Game</PageTitle>

<GameDisplay Game="@Game" />


<h4>Game Settings</h4>
<p>An autosave occurs every 30 seconds.</p>
<button id="Save" class="btn btn-primary" onclick=@(Game.Save)>Save</button>
<button id="NewGame" class="btn btn-danger" onclick="@(NewGame)">New Game</button>

<style>
    div {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>

@code {
    private Game Game = new Game();

    public void NewGame()
    {
        Game = new Game();
    }

    public async Task<SavedGame> TryLoadGameAsync()
    {
        var savedGame = await localStorage.GetItemAsync<SavedGame>("Game");
        if (savedGame != null)
        {
            Game.LoadGame(savedGame);
        }

        return null;
    }

    public void SaveGame(object? sender, SaveEventArgs e)
    {
        Task.Run(async () => await localStorage.SetItemAsync<SavedGame>("Game", Game.AsSavedGame()));
        Console.WriteLine("Game saved.");
    }

    protected override async Task OnInitializedAsync()
    {
        StateHasChangedTimer = new Timer(StateHasChangedTimerCallback, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
        Game.Saved += SaveGame;
        await TryLoadGameAsync();
        base.OnInitialized();
    }

    private Timer StateHasChangedTimer;
    private void StateHasChangedTimerCallback(object? state)
    {
        StateHasChanged();
    }
}